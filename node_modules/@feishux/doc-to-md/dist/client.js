'use strict';

var tslib_es6 = require('./node_modules/.pnpm/@rollup_plugin-typescript@11.1.4_npfczztdgjrztevivmmoaxbi54/node_modules/tslib/tslib.es6.js');
var feishu = require('./utils/feishu.js');
var shared = require('@feishux/shared');

/**
 * FlowUs文档转Md
 */
class FeiShuToMarkdown {
    constructor(options) {
        this.feiShuClient = options === null || options === void 0 ? void 0 : options.client;
    }
    pageToMarkdown(id) {
        return tslib_es6.__awaiter(this, void 0, void 0, function* () {
            if (!this.feiShuClient) {
                shared.out.err('feiShuClient is not provided');
                process.exit(1);
            }
            const pageBlocks = yield this.feiShuClient.getPageBlocks(id);
            return this.toMarkdownString(pageBlocks);
        });
    }
    toMarkdownString(blocks) {
        var _a;
        let mdString = '';
        // 判断是是否是文档页面
        // const blocksKeys = Object.keys(blocks.blocks)
        // 第一个节点标记了该Block的属性是文档还是其他
        const firstBlock = blocks[0];
        if (firstBlock.block_type === 1 /* IBlockType.page */) {
            let prevType = 0;
            const needEnter = [
                19 /* IBlockType.callout */,
                15 /* IBlockType.quote */,
                2 /* IBlockType.text */,
                34 /* IBlockType.quote_container */,
            ];
            (_a = firstBlock.children) === null || _a === void 0 ? void 0 : _a.forEach((blockId) => {
                var _a;
                const block = blocks.find((item) => item.block_id === blockId);
                const curType = block.block_type;
                let linefeed = '';
                // 特殊处理一些md语法的粘连性，需要额外加换行
                if (needEnter.includes(prevType) && needEnter.includes(curType)) {
                    linefeed += '\n';
                }
                if (!feishu.transform[curType]) {
                    shared.out.debug(`暂不支持的块类型: ${shared.IBlockTypeText[curType]}`);
                }
                else {
                    mdString +=
                        linefeed +
                            feishu.transform[curType]({
                                block,
                                blocks: blocks,
                                pageTitle: (_a = firstBlock.page) === null || _a === void 0 ? void 0 : _a.elements[0].text_run.content,
                            }) +
                            '\n';
                    prevType = curType;
                }
            });
        }
        else {
            // 非页面Block，退出转换
            shared.out.err('类型错误', '非文档类型');
            process.exit(1);
        }
        return mdString;
    }
}

exports.FeiShuToMarkdown = FeiShuToMarkdown;
//# sourceMappingURL=client.js.map
