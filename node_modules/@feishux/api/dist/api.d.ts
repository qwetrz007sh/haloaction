/// <reference types="node" />
import { FeiShuConfig } from './types';
import { IBlock, IFolderData, IWikiNode } from '@feishux/shared';
/**
 * FeiShu API
 */
export declare class FeiShuClient {
    private readonly config;
    private tenantAccessToken;
    private initPromise;
    constructor(config: FeiShuConfig);
    init: () => Promise<void>;
    private getAccessToken;
    private _fetch;
    /**
     * 获取页面所有Block
     * @param pageId
     */
    getPageBlocks(pageId: string): Promise<IBlock[]>;
    /**
     * 获取素材
     * @private
     */
    getResourceItem(file_token: string): Promise<{
        buffer: {
            code: number;
            data: Buffer;
        };
        type: string;
        name: string;
    }>;
    /**
     * 获取文件夹下的文档树（Tree 结构）
     * @param folder_token
     */
    getFolderTree(folder_token: string): Promise<IFolderData[]>;
    /**
     * 获取文件夹下的文档列表
     * @param folder_token
     */
    getFolderList(folder_token: string): Promise<IFolderData[]>;
    /**
     * 获取知识库下的子节点列表
     * @param spaceId 空间 ID
     * @param parent_node_token 父级 Node 节点
     */
    getReposNodes(spaceId: string, parent_node_token?: string): Promise<IWikiNode[]>;
    /**
     * 获取知识库下的子节点列表(Tree 结构)
     * @param spaceId
     * @param parent_node_token
     */
    getReposNodesTree(spaceId: string, parent_node_token?: string): Promise<IWikiNode[]>;
}
