import { YuqueWithToken, YuqueWithPwd } from '@elog/sdk-yuque';
export * from '@elog/sdk-yuque';
import NotionClient__default from '@elog/sdk-notion';
export * from '@elog/sdk-notion';
import FlowUsClient__default from '@elog/sdk-flowus';
export * from '@elog/sdk-flowus';
import FeiShuClient from '@elog/sdk-feishu';
import DeployClient__default, { DeployConfig } from '@elog/deploy';
export * from '@elog/deploy';
import { DocDetail, NotionCatalog, YuqueCatalog } from '@elog/types';
import { ImageConfig } from '@elog/plugin-image';
export * from '@elog/plugin-image';
export * from '@elog/shared';

/**
 * 文章更新状态
 */
declare enum DocStatus {
    update = "update",
    create = "create"
}
/**
 * 写作平台
 */
declare enum WritePlatform {
    YUQUE = "yuque",
    YUQUE_WITH_PWD = "yuque-pwd",
    NOTION = "notion",
    FLOWUS = "flowus",
    FEISHU = "feishu"
}

/**
 * 写作配置
 */
type WritePlatformConfig = {
    [key in WritePlatform]: any;
};
type WriteConfig = {
    platform: WritePlatform;
    [key: string]: any;
} & WritePlatformConfig;
interface ExtConfig {
    /** 缓存路径 */
    cachePath: string;
    /** 是否缓存所有属性 */
    isFullCache?: boolean;
    /** 是否强制同步，开启后会删除本地文档，慎用 */
    isForced?: boolean;
    /** 忽略缓存进行同步 */
    disableCache?: boolean;
}
/**
 * Elog 配置
 */
interface ElogConfig {
    /** 写作平台 */
    write: WriteConfig;
    /** 部署平台 */
    deploy: DeployConfig;
    /** 图片转CDN配置 */
    image?: ImageConfig;
    /** 拓展配置 */
    extension: ExtConfig;
}
interface CacheJSON {
    docs: Partial<DocDetail>[];
    catalog: NotionCatalog[] | YuqueCatalog[];
}
interface DocStatusMap {
    [key: string]: {
        index?: number;
        status: DocStatus;
    };
}

/**
 * 处理器
 */
declare class Elog {
    /** 配置文件 */
    config: ElogConfig;
    /** 下载器 */
    downloaderClient: YuqueWithToken | YuqueWithPwd | NotionClient__default | FlowUsClient__default | FeiShuClient;
    /** 部署器 */
    deployClient: DeployClient__default;
    /** 图片转CDN转换器 */
    imageClient: any;
    /** 缓存文章 */
    cachedArticles: DocDetail[];
    /** 是否需要更新，当所有文章都不需要更新，这个标记就会阻止后续流程 */
    needUpdate: boolean;
    /** 待更新的文章列表 */
    needUpdateArticles: DocDetail[];
    /** 废弃文档 */
    wasteArticles: DocDetail[];
    constructor(config: ElogConfig);
    /**
     * 初始化增量配置
     * @param config
     */
    initIncrementalUpdate(config: ElogConfig): void;
    /**
     * 初始化写作平台
     * @param config
     */
    initWritingPlatform(config: ElogConfig): YuqueWithToken | YuqueWithPwd | NotionClient__default | FlowUsClient__default | FeiShuClient;
    /**
     * 初始化部署平台
     * @param config
     */
    initDeployPlatform(config: ElogConfig): DeployClient__default;
    /**
     * 初始化图片转CDN配置
     * @param config
     */
    initImgCdn(config: ElogConfig): void;
    /**
     * 下载文章详情列表
     */
    fetchArticles(): Promise<void>;
    /**
     * 写入缓存 json 文件
     */
    writeArticleCache(): void;
    /**
     * 处理文章图片
     */
    processImage(docDetailList: DocDetail[]): Promise<any>;
    /**
     * 部署文章
     */
    deployArticles(): Promise<void | DocDetail[]>;
    /**
     * 强制同步
     * 仅适用于想让线上和本地文档保持强一致
     * 例如：线上文档改名/删除后，本地旧文档也想要同步删除
     */
    syncForced(): boolean;
    /**
     * 处理本地部署
     * @param articleList
     */
    processDocPath(articleList: DocDetail[]): DocDetail[];
    deploy(): Promise<void>;
}

export { CacheJSON, DocStatusMap, ElogConfig, Elog as default };
