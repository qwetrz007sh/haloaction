import WPAPI from 'wpapi';

interface WordPressConfig {
    username: string;
    password: string;
    endpoint: string;
    keyMap?: {
        tags?: string;
        categories?: string;
        urlname?: string;
        cover?: string;
        description?: string;
    };
    namespace?: string;
    formatExt?: string;
}
/**
 * 文章详情
 */
interface WordPressPost {
    id: number;
    date: string;
    date_gmt: string;
    guid: {
        rendered: string;
    };
    modified: string;
    modified_gmt: string;
    slug: string;
    status: string;
    type: string;
    link: string;
    title: {
        rendered: string;
    };
    content: {
        rendered: string;
        protected: boolean;
    };
    excerpt: {
        rendered: string;
        protected: boolean;
    };
    author: number;
    featured_media: number;
    comment_status: string;
    ping_status: string;
    sticky: boolean;
    template: string;
    format: string;
    meta: any[];
    categories: number[];
    tags: any[];
}
interface WordPressBaseParams {
    title?: string;
    content?: string;
    status?: string;
    slug?: string;
    categories?: number | number[];
    tags?: number | number[];
    /** 特色图片 */
    featured_media?: number;
    excerpt?: string;
}
interface CreateWordPressPost extends WordPressBaseParams {
    title: string;
    content: string;
}
type UpdateWordPressPost = WordPressBaseParams;
interface WordPressCategory {
    id: number;
    count: number;
    description: string;
    link: string;
    name: string;
    slug: string;
    taxonomy: string;
    parent: number;
    meta: any[];
}
interface WordPressTag {
    id: number;
    count: number;
    description: string;
    link: string;
    name: string;
    slug: string;
    taxonomy: string;
}
interface WordPressMedia {
    id: number;
    date: string;
    date_gmt: string;
    guid: {
        rendered: string;
    };
    modified: string;
    modified_gmt: string;
    slug: string;
    status: string;
    type: string;
    link: string;
    title: {
        rendered: string;
    };
    author: number;
    comment_status: string;
    ping_status: string;
    template: string;
    meta: any[];
    description: {
        rendered: string;
    };
    caption: {
        rendered: string;
    };
    alt_text: string;
    media_type: string;
    mime_type: string;
    media_details: {
        width: number;
        height: number;
        file: string;
        filesize: number;
        sizes: {
            medium: {
                file: string;
                width: number;
                height: number;
                filesize: number;
                mime_type: string;
                source_url: string;
            };
            thumbnail: {
                file: string;
                width: number;
                height: number;
                filesize: number;
                mime_type: string;
                source_url: string;
            };
            full: {
                file: string;
                width: number;
                height: number;
                mime_type: string;
                source_url: string;
            };
        };
        image_meta: {
            aperture: string;
            credit: string;
            camera: string;
            caption: string;
            created_timestamp: string;
            copyright: string;
            focal_length: string;
            iso: string;
            shutter_speed: string;
            title: string;
            orientation: string;
            keywords: any[];
        };
    };
    post: number;
    source_url: string;
}
interface WordPressMediaParams {
    /** 标题 */
    title?: string;
    /** 替代文本 */
    alt_text?: string;
    /** 说明文字 */
    caption?: string;
    /** 描述 */
    description?: string;
}

declare class WordPressClient {
    config: WordPressConfig;
    wpClient: WPAPI;
    constructor(config: WordPressConfig);
    /**
     * 获取文章列表
     */
    getPostList(pageSize?: number, page?: number): Promise<WordPressPost[]>;
    /**
     * 获取所有文章
     * @param page
     * @param allPosts
     */
    getAllPosts(page?: number, allPosts?: WordPressPost[]): Promise<WordPressPost[]>;
    /**
     * 创建文章
     */
    createPost(post: CreateWordPressPost): Promise<WordPressPost>;
    /**
     * 更新文章
     */
    updatePost(id: number, post: UpdateWordPressPost): Promise<WordPressPost>;
    /**
     * 删除文章
     */
    deletePost(id: number): Promise<WordPressPost>;
    /**
     * 获取标签
     */
    getTags(): Promise<WordPressTag[]>;
    /**
     * 获取全部标签
     */
    getAllTags(page?: number, allTags?: WordPressTag[]): Promise<WordPressTag[]>;
    /**
     * 新增标签
     */
    createTag(tag: {
        name: string;
    }): Promise<WordPressTag>;
    /**
     * 获取分类
     */
    getCategories(): Promise<WordPressCategory[]>;
    /**
     * 获取全部分类
     */
    getAllCategories(page?: number, allCategories?: WordPressCategory[]): Promise<WordPressCategory[]>;
    /**
     * 新增分类
     * WordPress的分类存在父子关系，但是先不支持
     * @param category
     */
    createCategory(category: {
        name: string;
    }): Promise<WordPressCategory>;
    /**
     * 获取媒体库
     */
    getMedia(): Promise<WordPressMedia[]>;
    /**
     * 获取全部媒体库
     */
    getAllMedia(page?: number, allMedia?: WordPressMedia[]): Promise<WordPressMedia[]>;
    /**
     * 上传媒体
     */
    uploadMedia(file: Buffer, filename: string): Promise<WordPressMedia>;
}

export { CreateWordPressPost, UpdateWordPressPost, WordPressBaseParams, WordPressCategory, WordPressConfig, WordPressMedia, WordPressMediaParams, WordPressPost, WordPressTag, WordPressClient as default };
