var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// src/client.ts
import { out } from "@elog/shared";
import WPAPI from "wpapi";
var WordPressClient = class {
  constructor(config) {
    this.config = config;
    if (!config.endpoint) {
      out.err("\u7F3A\u5C11\u53C2\u6570", "\u7F3A\u5C11WordPress endpoint");
      process.exit(-1);
    }
    this.config.username = config.username || process.env.WORDPRESS_USERNAME;
    this.config.password = config.password || process.env.WORDPRESS_PASSWORD;
    if (!this.config.username || !this.config.password) {
      out.err("\u7F3A\u5C11\u53C2\u6570", "\u7F3A\u5C11WordPress\u8D26\u53F7\u6216\u5BC6\u7801");
      process.exit(-1);
    }
    this.wpClient = new WPAPI({
      endpoint: config.endpoint,
      username: config.username,
      password: config.password
    });
  }
  /**
   * 获取文章列表
   */
  getPostList(pageSize = 100, page = 1) {
    return __async(this, null, function* () {
      return this.wpClient.posts().perPage(pageSize).page(page);
    });
  }
  /**
   * 获取所有文章
   * @param page
   * @param allPosts
   */
  getAllPosts() {
    return __async(this, arguments, function* (page = 1, allPosts = []) {
      return this.wpClient.posts().perPage(100).page(page).then((posts) => {
        allPosts = allPosts.concat(posts);
        if (posts.length === 100) {
          return this.getAllPosts(page + 1, allPosts);
        } else {
          return allPosts;
        }
      }).catch((err) => {
        if (err.code === "rest_post_invalid_page_number") {
          return allPosts;
        } else {
          out.err("\u83B7\u53D6\u6587\u7AE0\u5217\u8868\u5931\u8D25", err.message);
          out.debug(err);
        }
      });
    });
  }
  /**
   * 创建文章
   */
  createPost(post) {
    return __async(this, null, function* () {
      return this.wpClient.posts().create(post);
    });
  }
  /**
   * 更新文章
   */
  updatePost(id, post) {
    return __async(this, null, function* () {
      return this.wpClient.posts().id(id).update(post);
    });
  }
  /**
   * 删除文章
   */
  deletePost(id) {
    return __async(this, null, function* () {
      return this.wpClient.posts().id(id).delete();
    });
  }
  /**
   * 获取标签
   */
  getTags() {
    return __async(this, null, function* () {
      return this.wpClient.tags();
    });
  }
  /**
   * 获取全部标签
   */
  getAllTags() {
    return __async(this, arguments, function* (page = 1, allTags = []) {
      return this.wpClient.tags().perPage(100).page(page).then((tags) => {
        if (tags.length === 0)
          return allTags;
        allTags = allTags.concat(tags);
        if (tags.length === 100) {
          return this.getAllTags(page + 1, allTags);
        } else {
          return allTags;
        }
      }).catch((err) => {
        out.err("\u83B7\u53D6\u6807\u7B7E\u5217\u8868\u5931\u8D25", err.message);
        out.debug(err);
      });
    });
  }
  /**
   * 新增标签
   */
  createTag(tag) {
    return __async(this, null, function* () {
      return this.wpClient.tags().create(tag);
    });
  }
  /**
   * 获取分类
   */
  getCategories() {
    return __async(this, null, function* () {
      return this.wpClient.categories();
    });
  }
  /**
   * 获取全部分类
   */
  getAllCategories() {
    return __async(this, arguments, function* (page = 1, allCategories = []) {
      return this.wpClient.categories().perPage(100).page(page).then((categories) => {
        if (categories.length === 0)
          return allCategories;
        allCategories = allCategories.concat(categories);
        if (categories.length === 100) {
          return this.getAllCategories(page + 1, allCategories);
        } else {
          return allCategories;
        }
      }).catch((err) => {
        out.err("\u83B7\u53D6\u5206\u7C7B\u5217\u8868\u5931\u8D25", err.message);
        out.debug(err);
      });
    });
  }
  /**
   * 新增分类
   * WordPress的分类存在父子关系，但是先不支持
   * @param category
   */
  createCategory(category) {
    return __async(this, null, function* () {
      return this.wpClient.categories().create(category);
    });
  }
  /**
   * 获取媒体库
   */
  getMedia() {
    return __async(this, null, function* () {
      return this.wpClient.media();
    });
  }
  /**
   * 获取全部媒体库
   */
  getAllMedia() {
    return __async(this, arguments, function* (page = 1, allMedia = []) {
      return this.wpClient.media().perPage(100).page(page).then((medias) => {
        allMedia = allMedia.concat(medias);
        if (medias.length === 100) {
          return this.getAllMedia(page + 1, allMedia);
        } else {
          return allMedia;
        }
      }).catch((err) => {
        if (err.code === "rest_post_invalid_page_number") {
          return allMedia;
        } else {
          out.err("\u83B7\u53D6\u56FE\u7247\u5217\u8868\u5931\u8D25", err.message);
          out.debug(err);
        }
      });
    });
  }
  /**
   * 上传媒体
   */
  uploadMedia(file, filename) {
    return __async(this, null, function* () {
      const imageInfo = {
        title: filename,
        description: "upload by @elog/sdk-wordpress"
      };
      return this.wpClient.media().file(file, filename).create(imageInfo);
    });
  }
};
var client_default = WordPressClient;

// src/index.ts
var src_default = client_default;
export {
  src_default as default
};
//# sourceMappingURL=index.js.map