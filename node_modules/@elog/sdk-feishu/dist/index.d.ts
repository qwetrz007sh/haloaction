import * as _elog_types from '@elog/types';
import { DocProperties, DocDetail, BaseDoc } from '@elog/types';
import { FeiShuClient as FeiShuClient$1 } from '@feishux/api';
import { FeiShuToMarkdown } from '@feishux/doc-to-md';

interface FeiShuConfig {
    /** 知识库/我的空间 */
    type: 'wiki' | 'space';
    /** 父文件夹token */
    folderToken?: string;
    /** 知识库 ID */
    wikiId?: string;
    appId: string;
    appSecret: string;
    baseUrl?: string;
    /** 是否禁用生成父级文档 */
    disableParentDoc?: boolean;
    /** 下载并发数 */
    limit?: number;
}
interface FeiShuDoc {
    id: string;
    doc_id: string;
    title: string;
    updated: number;
    properties: DocProperties;
    createdAt: number;
    updatedAt: number;
    _index?: number;
    catalog: {
        title: string;
        doc_id: string;
    }[];
}

declare class FeiShuClient {
    config: FeiShuConfig;
    feishu: FeiShuClient$1;
    f2m: FeiShuToMarkdown;
    catalog: Omit<FeiShuDoc, 'properties'>[];
    constructor(config: FeiShuConfig);
    getPageList(): Promise<FeiShuDoc[]>;
    /**
     * 获取知识库文档
     */
    getWikiList(): Promise<FeiShuDoc[]>;
    /**
     * 获取我的空间下指定文件夹文档
     */
    getSpaceList(): Promise<FeiShuDoc[]>;
    download(page: FeiShuDoc): Promise<DocDetail>;
    getPageDetailList(cachedPages: FeiShuDoc[], ids: string[]): Promise<DocDetail[]>;
}

declare class FeiShu {
    config: FeiShuConfig;
    ctx: FeiShuClient;
    pages: FeiShuDoc[];
    constructor(config: FeiShuConfig);
    /**
     * 获取文章列表（不含详情）
     */
    getDocList(): Promise<BaseDoc[]>;
    /**
     * 获取文章详情列表
     * @param ids 需要下载的doc_id列表
     */
    getDocDetailList(ids: string[]): Promise<_elog_types.DocDetail[]>;
}

export { FeiShuConfig, FeiShuDoc, FeiShu as default };
