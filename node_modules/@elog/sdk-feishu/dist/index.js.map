{"version":3,"sources":["../src/client.ts","../src/utils.ts","../src/core.ts","../src/index.ts"],"names":["out","tree"],"mappings":"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","sourcesContent":["import { out } from '@elog/shared'\nimport { FeiShuConfig, FeiShuDoc } from './types'\nimport { FeiShuClient as FeiShuApi } from '@feishux/api'\nimport { IFolderData, IWikiNode } from '@feishux/shared'\nimport { FeiShuToMarkdown } from '@feishux/doc-to-md'\nimport { DocDetail } from '@elog/types'\nimport asyncPool from 'tiny-async-pool'\nimport { getProps } from './utils'\n\nclass FeiShuClient {\n  config: FeiShuConfig\n  feishu: FeiShuApi\n  f2m: FeiShuToMarkdown\n  catalog: Omit<FeiShuDoc, 'properties'>[] = []\n\n  constructor(config: FeiShuConfig) {\n    this.config = config\n    this.config.folderToken = config.folderToken\n    this.config.appId = config.appId\n    this.config.appSecret = config.appSecret\n    if (!this.config.appId || !this.config.appSecret) {\n      out.err('缺少参数', '缺少文件夹Token或知识库 ID')\n      process.exit(-1)\n    }\n    if (config.type === 'wiki' && !config.wikiId) {\n      out.err('缺少参数', '缺少知识库ID')\n      process.exit(-1)\n    } else if ((!config.type || config.type === 'space') && !config.folderToken) {\n      out.err('缺少参数', '缺少我的空间中文件夹 ID')\n      process.exit(-1)\n    }\n    this.feishu = new FeiShuApi({\n      appId: this.config.appId,\n      appSecret: this.config.appSecret,\n      baseUrl: this.config.baseUrl,\n    })\n    this.f2m = new FeiShuToMarkdown()\n  }\n\n  async getPageList(): Promise<FeiShuDoc[]> {\n    // 知识库\n    if (this.config.type === 'wiki') {\n      return this.getWikiList()\n    }\n    // 我的空间\n    return this.getSpaceList()\n  }\n\n  /**\n   * 获取知识库文档\n   */\n  async getWikiList(): Promise<FeiShuDoc[]> {\n    // 获取知识库字节点\n    const tree = await this.feishu.getReposNodesTree(\n      this.config.wikiId as string,\n      this.config.folderToken,\n    )\n    const self = this\n\n    // 深度优先遍历tree\n    function dfs(tree: IWikiNode[], catalog: any[] = [], level = 0, parent?: IWikiNode) {\n      tree.forEach((item) => {\n        const newCatalog = [\n          ...catalog,\n          { title: parent?.title, doc_id: parent?.obj_token || parent?.node_token },\n        ]\n        if (item.obj_type == 'doc' || item.obj_type == 'docx') {\n          const doc: Omit<FeiShuDoc, 'properties'> & Partial<IWikiNode> = {\n            doc_id: item.obj_token,\n            id: item.obj_token,\n            title: item.title,\n            createdAt: Number(item.obj_create_time + '000'),\n            updated: Number(item.obj_edit_time + '000'),\n            updatedAt: Number(item.obj_edit_time + '000'),\n            catalog: level > 0 ? newCatalog : [],\n            has_child: item.has_child,\n            node_token: item.node_token,\n            parent_node_token: item.parent_node_token,\n          }\n          // 首先检查 item 是否没有 children 属性，或者 self.config.disableParentDoc 是否不为 true。\n          // 如果这两个条件中的任何一个为 true，那么 doc 对象就会被添加到 self.catalog 数组中\n          // disableParentDoc 就是为了控制当父文档下存在文档时，父文档需不需要下载\n          if (!item.children || !self.config.disableParentDoc) {\n            self.catalog.push(doc)\n          }\n        }\n        if (item.children) {\n          dfs(item.children, level > 0 ? newCatalog : [], level + 1, item)\n        }\n      })\n    }\n    dfs(tree)\n    return this.catalog as FeiShuDoc[]\n  }\n\n  /**\n   * 获取我的空间下指定文件夹文档\n   */\n\n  async getSpaceList(): Promise<FeiShuDoc[]> {\n    const tree = await this.feishu.getFolderTree(this.config.folderToken as string)\n    const self = this\n\n    // 深度优先遍历tree\n    function dfs(tree: IFolderData[], catalog: any[] = [], level = 0, parent?: IFolderData) {\n      tree.map((item) => {\n        const newCatalog = [...catalog, { title: parent?.name, doc_id: parent?.token }]\n        if (item.type === 'docx') {\n          self.catalog.push({\n            id: item.token,\n            doc_id: item.token,\n            title: item.name,\n            updated: Number(item.modified_time + '000'),\n            createdAt: Number(item.created_time + '000'),\n            updatedAt: Number(item.modified_time + '000'),\n            // 目录信息\n            catalog: level > 0 ? newCatalog : [],\n          })\n        }\n        if (item.children) {\n          dfs(item.children, level > 0 ? newCatalog : [], level + 1, item)\n        }\n      })\n    }\n    dfs(tree)\n    return this.catalog as FeiShuDoc[]\n  }\n\n  async download(page: FeiShuDoc): Promise<DocDetail> {\n    let body = ''\n    try {\n      const pageBlocks = await this.feishu.getPageBlocks(page.id)\n      body = this.f2m.toMarkdownString(pageBlocks)\n    } catch (e: any) {\n      out.warning(`${page.title} 下载出错: ${e.message}`)\n      out.debug(e)\n    }\n    // 解析出properties\n    const { body: newBody, properties } = getProps(page, body)\n    const doc = {\n      id: page.id,\n      properties,\n    }\n    return {\n      ...doc,\n      body: newBody,\n      body_original: body,\n      doc_id: page.id,\n      updated: page.updated,\n      catalog: page.catalog,\n    }\n  }\n\n  async getPageDetailList(cachedPages: FeiShuDoc[], ids: string[]) {\n    let articleList: DocDetail[] = []\n    let pages: FeiShuDoc[] = cachedPages\n    if (ids?.length) {\n      // 取交集，过滤不需要下载的page\n      pages = pages.filter((page) => {\n        const exist = ids.indexOf(page.id) > -1\n        if (!exist) {\n          const title = page.title\n          out.info('跳过下载', title)\n        }\n        return exist\n      })\n    }\n    if (!pages?.length) {\n      out.info('跳过', '没有需要下载的文章')\n      return articleList\n    }\n    out.info('待下载数', String(pages.length))\n    out.access('开始下载文档...')\n    pages = pages.map((item, index) => ({ ...item, _index: index + 1 } as FeiShuDoc))\n    const promise = async (page: FeiShuDoc) => {\n      out.info(`下载文档 ${page._index}/${pages.length}   `, page.title)\n      let article = await this.download(page)\n      articleList.push(article)\n    }\n    await asyncPool(this.config.limit || 3, pages, promise)\n    out.info('已下载数', String(articleList.length))\n    return articleList\n  }\n}\n\nexport default FeiShuClient\n","import { out, timeFormat } from '@elog/shared'\nimport { FeiShuDoc } from './types'\nimport frontMatter from 'front-matter'\n\n/**\n * 生成元数据\n */\nexport const getProps = (page: FeiShuDoc, body: string) => {\n  let properties = {\n    // 注入title\n    title: page.title,\n    // urlname\n    urlname: page.doc_id,\n    // 创建时间\n    date: timeFormat(page.createdAt),\n    // 更新时间\n    updated: timeFormat(page.updatedAt),\n  } as any\n  try {\n    const regex = /^---[\\s|\\S]+?---/i\n    body = body.replace(regex, (a: string) => a.replace(/(<br \\/>|<br>|<br\\/>)/gi, '\\n'))\n    const result = frontMatter(body)\n    body = result.body\n    let attributes = <Record<string, string>>result.attributes\n    properties = {\n      ...properties,\n      ...attributes,\n    }\n\n    return {\n      body,\n      properties,\n    }\n  } catch (e: any) {\n    out.warning('front-matter解析失败，将返回预定义属性', e.message)\n    out.warning('预定义属性：https://elog.1874.cool/notion/raqyleng501h23p1#预定义属性')\n    out.debug(e)\n    return {\n      body,\n      properties,\n    }\n  }\n}\n","import { FeiShuConfig, FeiShuDoc } from './types'\nimport FeiShuClient from './client'\nimport { BaseDoc } from '@elog/types'\nimport { out } from '@elog/shared'\n\nclass FeiShu {\n  config: FeiShuConfig\n  ctx: FeiShuClient\n  pages: FeiShuDoc[] = []\n\n  constructor(config: FeiShuConfig) {\n    this.config = config\n    this.ctx = new FeiShuClient(config)\n  }\n\n  /**\n   * 获取文章列表（不含详情）\n   */\n  async getDocList(): Promise<BaseDoc[]> {\n    out.info('正在获取文档列表，请稍等...')\n    const pages = await this.ctx.getPageList()\n    this.pages = pages\n    out.info('文档总数', String(this.pages.length))\n    return pages.map((page) => {\n      return {\n        // 暂时只需要返回这些属性\n        id: page.id,\n        doc_id: page.id,\n        updated: page.updated,\n      }\n    })\n  }\n\n  /**\n   * 获取文章详情列表\n   * @param ids 需要下载的doc_id列表\n   */\n  async getDocDetailList(ids: string[]) {\n    return await this.ctx.getPageDetailList(this.pages, ids)\n  }\n}\n\nexport default FeiShu\n","import FeiShu from './core'\nexport * from './types'\n\nexport default FeiShu\n"]}