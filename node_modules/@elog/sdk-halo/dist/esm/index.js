var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __async = (__this, __arguments, generator) => {
  return new Promise((resolve, reject) => {
    var fulfilled = (value) => {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    };
    var rejected = (value) => {
      try {
        step(generator.throw(value));
      } catch (e) {
        reject(e);
      }
    };
    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);
    step((generator = generator.apply(__this, __arguments)).next());
  });
};

// src/client.ts
import { out, request } from "@elog/shared";
import FormStream from "formstream";
var HaloClient = class {
  constructor(config) {
    this.config = config;
    if (!config.endpoint) {
      out.err("\u7F3A\u5C11\u53C2\u6570", "\u7F3A\u5C11Halo\u7AD9\u70B9\u5730\u5740 endpoint");
      process.exit(-1);
    }
    if (!this.config.token) {
      out.err("\u7F3A\u5C11\u53C2\u6570", "\u7F3A\u5C11Halo\u4E2A\u4EBA\u4EE4\u724C token");
      process.exit(-1);
    }
    if (!this.config.policyName) {
      out.warning("\u6CE8\u610F", "\u672A\u6307\u5B9A\u5B58\u50A8\u7B56\u7565\uFF0C\u5C06\u4F7F\u7528\u9ED8\u8BA4\u7B56\u7565\u4E0A\u4F20\u56FE\u7247");
      this.config.policyName = "default-policy";
    }
  }
  /**
   * send api request to yuque
   * @param api
   * @param reqOpts
   */
  request(api, reqOpts) {
    return __async(this, null, function* () {
      let baseUrl = this.config.endpoint;
      if (baseUrl.endsWith("/")) {
        baseUrl = baseUrl.slice(0, -1);
      }
      const url = `${baseUrl}${api}`;
      const opts = __spreadProps(__spreadValues({}, reqOpts), {
        headers: __spreadValues({
          Authorization: `Bearer ${this.config.token}`
        }, reqOpts == null ? void 0 : reqOpts.headers)
      });
      const res = yield request(url, opts);
      if (res.status !== 200 && res.status !== 201) {
        out.debug(res);
        throw new Error(JSON.stringify(res.data));
      }
      return res.data;
    });
  }
  /**
   * 获取文档列表
   */
  getPostList() {
    return __async(this, null, function* () {
      return this.request("/apis/api.console.halo.run/v1alpha1/posts", {
        method: "GET",
        data: {
          labelSelector: "content.halo.run/deleted=false"
        }
      });
    });
  }
  /**
   * 获取Categories列表
   */
  getCategories() {
    return __async(this, null, function* () {
      return this.request("/apis/content.halo.run/v1alpha1/categories", {
        method: "GET"
      });
    });
  }
  /**
   * 新增分类
   */
  createCategory(params) {
    return __async(this, null, function* () {
      return this.request("/apis/content.halo.run/v1alpha1/categories", {
        method: "POST",
        data: params
      });
    });
  }
  /**
   * 获取Tags列表
   */
  getTags() {
    return __async(this, null, function* () {
      return this.request("/apis/content.halo.run/v1alpha1/tags", {
        method: "GET"
      });
    });
  }
  /**
   * 新增分类
   */
  createTag(params) {
    return __async(this, null, function* () {
      return this.request("/apis/content.halo.run/v1alpha1/tags", {
        method: "POST",
        data: params
      });
    });
  }
  /**
   * 获取附件列表
   */
  getAttachments() {
    return __async(this, null, function* () {
      return this.request("/apis/api.console.halo.run/v1alpha1/attachments", {
        method: "GET"
      });
    });
  }
  /**
   * 获取单个附件
   */
  getAttachment(name) {
    return __async(this, null, function* () {
      return this.request(`/apis/storage.halo.run/v1alpha1/attachments/${name}`, {
        method: "GET"
      });
    });
  }
  /**
   * 上传附件
   */
  uploadAttachment(buffer, filename) {
    return __async(this, null, function* () {
      const form = new FormStream();
      form.buffer("file", buffer, filename);
      form.field("policyName", this.config.policyName || "");
      form.field("groupName", this.config.groupName || "");
      return this.request("/apis/api.console.halo.run/v1alpha1/attachments/upload", {
        method: "POST",
        stream: form,
        headers: form.headers()
      });
    });
  }
  /**
   * 更新单篇文档内容
   */
  updatePostContent(docId, params) {
    return __async(this, null, function* () {
      return this.request(`/apis/api.console.halo.run/v1alpha1/posts/${docId}/content`, {
        method: "PUT",
        data: params
      });
    });
  }
  /**
   * 更新单篇文档内容
   */
  updatePostInfo(docId, params) {
    return __async(this, null, function* () {
      return this.request(`/apis/content.halo.run/v1alpha1/posts/${docId}`, {
        method: "PUT",
        data: params
      });
    });
  }
  /**
   * 新增文档
   */
  createPost(params) {
    return __async(this, null, function* () {
      return this.request("/apis/api.console.halo.run/v1alpha1/posts", {
        method: "POST",
        data: params
      });
    });
  }
  /**
   * 发布文档
   */
  publishPost(docId) {
    return __async(this, null, function* () {
      return this.request(`/apis/api.console.halo.run/v1alpha1/posts/${docId}/publish`, {
        method: "PUT"
      });
    });
  }
  /**
   * 取消发布文档
   */
  unpublishPost(docId) {
    return __async(this, null, function* () {
      return this.request(`/apis/api.console.halo.run/v1alpha1/posts/${docId}/unpublish`, {
        method: "PUT"
      });
    });
  }
  getPolicy() {
    return __async(this, null, function* () {
      return this.request(
        `/apis/storage.halo.run/v1alpha1/policies/${this.config.policyName}`,
        {
          method: "GET"
        }
      );
    });
  }
  /**
   * 获取附件链接
   * @param name
   */
  getAttachmentPermalink(name) {
    return __async(this, null, function* () {
      return new Promise((resolve, reject) => {
        const fetchPermalink = () => {
          this.getAttachment(name).then((response) => {
            var _a;
            const permalink = (_a = response.status) == null ? void 0 : _a.permalink;
            if (permalink) {
              resolve(permalink);
            } else {
              setTimeout(fetchPermalink, 1e3);
            }
          }).catch((error) => reject(error));
        };
        fetchPermalink();
      });
    });
  }
};
var client_default = HaloClient;

// src/types.ts
import { PostSpecVisibleEnum, PostRequest, Post, Content } from "@halo-dev/api-client";

// src/index.ts
var src_default = client_default;
export {
  Content,
  Post,
  PostRequest,
  PostSpecVisibleEnum,
  src_default as default
};
//# sourceMappingURL=index.js.map