{"version":3,"sources":["../src/client.ts","../src/types.ts","../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAS,KAAK,eAA+B;AAC7C,OAAO,gBAAgB;AAevB,IAAM,aAAN,MAAiB;AAAA,EAEf,YAAY,QAAoB;AAC9B,SAAK,SAAS;AACd,QAAI,CAAC,OAAO,UAAU;AACpB,UAAI,IAAI,4BAAQ,mDAAqB;AACrC,cAAQ,KAAK,EAAE;AAAA,IACjB;AACA,QAAI,CAAC,KAAK,OAAO,OAAO;AACtB,UAAI,IAAI,4BAAQ,gDAAkB;AAClC,cAAQ,KAAK,EAAE;AAAA,IACjB;AACA,QAAI,CAAC,KAAK,OAAO,YAAY;AAC3B,UAAI,QAAQ,gBAAM,oHAAqB;AACvC,WAAK,OAAO,aAAa;AAAA,IAC3B;AAAA,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOM,QAAW,KAAa,SAAqC;AAAA;AACjE,UAAI,UAAU,KAAK,OAAO;AAC1B,UAAI,QAAQ,SAAS,GAAG,GAAG;AAEzB,kBAAU,QAAQ,MAAM,GAAG,EAAE;AAAA,MAC/B;AACA,YAAM,MAAM,GAAG,UAAU;AACzB,YAAM,OAAuB,iCACxB,UADwB;AAAA,QAE3B,SAAS;AAAA,UACP,eAAe,UAAU,KAAK,OAAO;AAAA,WAClC,mCAAS;AAAA,MAEhB;AACA,YAAM,MAAM,MAAM,QAAW,KAAK,IAAI;AACtC,UAAI,IAAI,WAAW,OAAO,IAAI,WAAW,KAAK;AAC5C,YAAI,MAAM,GAAU;AAEpB,cAAM,IAAI,MAAM,KAAK,UAAU,IAAI,IAAI,CAAC;AAAA,MAC1C;AACA,aAAO,IAAI;AAAA,IACb;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,cAAc;AAAA;AAClB,aAAO,KAAK,QAAwB,6CAA6C;AAAA,QAC/E,QAAQ;AAAA,QACR,MAAM;AAAA,UACJ,eAAe;AAAA,QACjB;AAAA,MACF,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,gBAAgB;AAAA;AACpB,aAAO,KAAK,QAAsB,8CAA8C;AAAA,QAC9E,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,eAAe,QAAkB;AAAA;AACrC,aAAO,KAAK,QAAkB,8CAA8C;AAAA,QAC1E,QAAQ;AAAA,QACR,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,UAAU;AAAA;AACd,aAAO,KAAK,QAAiB,wCAAwC;AAAA,QACnE,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,UAAU,QAAa;AAAA;AAC3B,aAAO,KAAK,QAAa,wCAAwC;AAAA,QAC/D,QAAQ;AAAA,QACR,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,iBAAiB;AAAA;AACrB,aAAO,KAAK,QAAwB,mDAAmD;AAAA,QACrF,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,cAAc,MAAc;AAAA;AAChC,aAAO,KAAK,QAAoB,+CAA+C,QAAQ;AAAA,QACrF,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,iBAAiB,QAAgB,UAAkB;AAAA;AACvD,YAAM,OAAO,IAAI,WAAW;AAC5B,WAAK,OAAO,QAAQ,QAAQ,QAAQ;AACpC,WAAK,MAAM,cAAc,KAAK,OAAO,cAAc,EAAE;AACrD,WAAK,MAAM,aAAa,KAAK,OAAO,aAAa,EAAE;AACnD,aAAO,KAAK,QAAoB,0DAA0D;AAAA,QACxF,QAAQ;AAAA,QACR,QAAQ;AAAA,QACR,SAAS,KAAK,QAAQ;AAAA,MACxB,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,kBAAkB,OAAe,QAAiB;AAAA;AACtD,aAAO,KAAK,QAAiB,6CAA6C,iBAAiB;AAAA,QACzF,QAAQ;AAAA,QACR,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,eAAe,OAAe,QAAc;AAAA;AAChD,aAAO,KAAK,QAAc,yCAAyC,SAAS;AAAA,QAC1E,QAAQ;AAAA,QACR,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,WAAW,QAAqB;AAAA;AACpC,aAAO,KAAK,QAAqB,6CAA6C;AAAA,QAC5E,QAAQ;AAAA,QACR,MAAM;AAAA,MACR,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,YAAY,OAAe;AAAA;AAC/B,aAAO,KAAK,QAAc,6CAA6C,iBAAiB;AAAA,QACtF,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA;AAAA;AAAA;AAAA;AAAA,EAKM,cAAc,OAAe;AAAA;AACjC,aAAO,KAAK,QAAc,6CAA6C,mBAAmB;AAAA,QACxF,QAAQ;AAAA,MACV,CAAC;AAAA,IACH;AAAA;AAAA,EAEM,YAA6B;AAAA;AACjC,aAAO,KAAK;AAAA,QACV,4CAA4C,KAAK,OAAO;AAAA,QACxD;AAAA,UACE,QAAQ;AAAA,QACV;AAAA,MACF;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMM,uBAAuB,MAA+B;AAAA;AAC1D,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,cAAM,iBAAiB,MAAM;AAC3B,eAAK,cAAc,IAAI,EACpB,KAAK,CAAC,aAAa;AAnN9B;AAoNY,kBAAM,aAAY,cAAS,WAAT,mBAAiB;AACnC,gBAAI,WAAW;AACb,sBAAQ,SAAS;AAAA,YACnB,OAAO;AACL,yBAAW,gBAAgB,GAAI;AAAA,YACjC;AAAA,UACF,CAAC,EACA,MAAM,CAAC,UAAU,OAAO,KAAK,CAAC;AAAA,QACnC;AACA,uBAAe;AAAA,MACjB,CAAC;AAAA,IACH;AAAA;AACF;AAEA,IAAO,iBAAQ;;;AClOf,SAAS,qBAAqB,aAAa,MAAM,eAAe;;;ACIhE,IAAO,cAAQ","sourcesContent":["import { HaloConfig } from './types'\nimport { out, request, RequestOptions } from '@elog/shared'\nimport FormStream from 'formstream'\nimport {\n  Attachment,\n  AttachmentList,\n  Category,\n  CategoryList,\n  Content,\n  ListedPostList,\n  Policy,\n  Post,\n  PostRequest,\n  Tag,\n  TagList,\n} from '@halo-dev/api-client'\n\nclass HaloClient {\n  config: HaloConfig\n  constructor(config: HaloConfig) {\n    this.config = config\n    if (!config.endpoint) {\n      out.err('缺少参数', '缺少Halo站点地址 endpoint')\n      process.exit(-1)\n    }\n    if (!this.config.token) {\n      out.err('缺少参数', '缺少Halo个人令牌 token')\n      process.exit(-1)\n    }\n    if (!this.config.policyName) {\n      out.warning('注意', '未指定存储策略，将使用默认策略上传图片')\n      this.config.policyName = 'default-policy'\n    }\n  }\n\n  /**\n   * send api request to yuque\n   * @param api\n   * @param reqOpts\n   */\n  async request<T>(api: string, reqOpts: RequestOptions): Promise<T> {\n    let baseUrl = this.config.endpoint\n    if (baseUrl.endsWith('/')) {\n      // 删除最后一个斜杠\n      baseUrl = baseUrl.slice(0, -1)\n    }\n    const url = `${baseUrl}${api}`\n    const opts: RequestOptions = {\n      ...reqOpts,\n      headers: {\n        Authorization: `Bearer ${this.config.token}`,\n        ...reqOpts?.headers,\n      },\n    }\n    const res = await request<T>(url, opts)\n    if (res.status !== 200 && res.status !== 201) {\n      out.debug(res as any)\n      // @ts-ignore\n      throw new Error(JSON.stringify(res.data))\n    }\n    return res.data\n  }\n\n  /**\n   * 获取文档列表\n   */\n  async getPostList() {\n    return this.request<ListedPostList>('/apis/api.console.halo.run/v1alpha1/posts', {\n      method: 'GET',\n      data: {\n        labelSelector: 'content.halo.run/deleted=false',\n      },\n    })\n  }\n\n  /**\n   * 获取Categories列表\n   */\n  async getCategories() {\n    return this.request<CategoryList>('/apis/content.halo.run/v1alpha1/categories', {\n      method: 'GET',\n    })\n  }\n\n  /**\n   * 新增分类\n   */\n  async createCategory(params: Category) {\n    return this.request<Category>('/apis/content.halo.run/v1alpha1/categories', {\n      method: 'POST',\n      data: params,\n    })\n  }\n\n  /**\n   * 获取Tags列表\n   */\n  async getTags() {\n    return this.request<TagList>('/apis/content.halo.run/v1alpha1/tags', {\n      method: 'GET',\n    })\n  }\n\n  /**\n   * 新增分类\n   */\n  async createTag(params: Tag) {\n    return this.request<Tag>('/apis/content.halo.run/v1alpha1/tags', {\n      method: 'POST',\n      data: params,\n    })\n  }\n\n  /**\n   * 获取附件列表\n   */\n  async getAttachments() {\n    return this.request<AttachmentList>('/apis/api.console.halo.run/v1alpha1/attachments', {\n      method: 'GET',\n    })\n  }\n\n  /**\n   * 获取单个附件\n   */\n  async getAttachment(name: string) {\n    return this.request<Attachment>(`/apis/storage.halo.run/v1alpha1/attachments/${name}`, {\n      method: 'GET',\n    })\n  }\n\n  /**\n   * 上传附件\n   */\n  async uploadAttachment(buffer: Buffer, filename: string) {\n    const form = new FormStream()\n    form.buffer('file', buffer, filename)\n    form.field('policyName', this.config.policyName || '')\n    form.field('groupName', this.config.groupName || '')\n    return this.request<Attachment>('/apis/api.console.halo.run/v1alpha1/attachments/upload', {\n      method: 'POST',\n      stream: form as any,\n      headers: form.headers(),\n    })\n  }\n\n  /**\n   * 更新单篇文档内容\n   */\n  async updatePostContent(docId: string, params: Content) {\n    return this.request<Content>(`/apis/api.console.halo.run/v1alpha1/posts/${docId}/content`, {\n      method: 'PUT',\n      data: params,\n    })\n  }\n\n  /**\n   * 更新单篇文档内容\n   */\n  async updatePostInfo(docId: string, params: Post) {\n    return this.request<Post>(`/apis/content.halo.run/v1alpha1/posts/${docId}`, {\n      method: 'PUT',\n      data: params,\n    })\n  }\n\n  /**\n   * 新增文档\n   */\n  async createPost(params: PostRequest) {\n    return this.request<PostRequest>('/apis/api.console.halo.run/v1alpha1/posts', {\n      method: 'POST',\n      data: params,\n    })\n  }\n\n  /**\n   * 发布文档\n   */\n  async publishPost(docId: string) {\n    return this.request<Post>(`/apis/api.console.halo.run/v1alpha1/posts/${docId}/publish`, {\n      method: 'PUT',\n    })\n  }\n\n  /**\n   * 取消发布文档\n   */\n  async unpublishPost(docId: string) {\n    return this.request<Post>(`/apis/api.console.halo.run/v1alpha1/posts/${docId}/unpublish`, {\n      method: 'PUT',\n    })\n  }\n\n  async getPolicy(): Promise<Policy> {\n    return this.request<Policy>(\n      `/apis/storage.halo.run/v1alpha1/policies/${this.config.policyName}`,\n      {\n        method: 'GET',\n      },\n    )\n  }\n\n  /**\n   * 获取附件链接\n   * @param name\n   */\n  async getAttachmentPermalink(name: string): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const fetchPermalink = () => {\n        this.getAttachment(name)\n          .then((response) => {\n            const permalink = response.status?.permalink\n            if (permalink) {\n              resolve(permalink)\n            } else {\n              setTimeout(fetchPermalink, 1000)\n            }\n          })\n          .catch((error) => reject(error))\n      }\n      fetchPermalink()\n    })\n  }\n}\n\nexport default HaloClient\n","export { PostSpecVisibleEnum, PostRequest, Post, Content } from '@halo-dev/api-client'\n\nexport interface HaloConfig {\n  endpoint: string\n  token: string\n  policyName?: string\n  groupName?: string\n}\n","import HaloClient from './client'\n\nexport * from './types'\n\nexport default HaloClient\n"]}